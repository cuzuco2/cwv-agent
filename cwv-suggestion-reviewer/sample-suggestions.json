{
  "url": "https://www.ups.com/lasso/ulError",
  "deviceType": "mobile",
  "timestamp": "2024-03-13T12:00:00.000Z",
  "summary": {
    "lcp": { "current": "4.2s", "target": "2.5s", "status": "poor" },
    "cls": { "current": "0.15", "target": "0.1", "status": "needs-improvement" },
    "inp": { "current": "320ms", "target": "200ms", "status": "needs-improvement" }
  },
  "suggestions": [
    {
      "id": 1,
      "title": "Preload LCP Hero Slider Background Image",
      "description": "The hero slider background image is critical for LCP but is not preloaded, causing significant loading delays. This image appears to be the largest visible element on the page and should be prioritized for faster loading.",
      "metric": "LCP",
      "priority": "High",
      "effort": "Easy",
      "impact": "Reduce LCP by 800-1200ms",
      "implementation": "Add <link rel=\"preload\" as=\"image\" href=\"/path/to/hero-image.jpg\"> to the document head. Ensure the image is in next-gen format (WebP/AVIF) and properly sized for mobile devices.",
      "codeExample": "<link rel=\"preload\" as=\"image\" href=\"/images/hero-slider-bg.webp\" />",
      "category": "images"
    },
    {
      "id": 2,
      "title": "Optimize CSS Delivery: Inline Critical CSS & Defer Non-Critical",
      "description": "Multiple CSS files are blocking the render path, delaying the appearance of above-the-fold content. Critical CSS should be inlined and non-critical CSS should be deferred to improve LCP.",
      "metric": "LCP",
      "priority": "High",
      "effort": "Medium",
      "impact": "Reduce LCP by 600-900ms",
      "implementation": "Extract and inline critical CSS for above-the-fold content. Use rel=\"preload\" for important CSS files and defer non-critical styles using media=\"print\" onload trick.",
      "codeExample": "<style>/* Critical CSS inline */</style>\n<link rel=\"preload\" as=\"style\" href=\"/css/main.css\" onload=\"this.rel='stylesheet'\" />",
      "category": "css"
    },
    {
      "id": 3,
      "title": "Optimize Font Loading Strategy",
      "description": "Web fonts are causing layout shifts and contributing to LCP delays. Implement proper font loading strategies to prevent FOIT/FOUT and improve loading performance.",
      "metric": "LCP",
      "priority": "Medium",
      "effort": "Medium",
      "impact": "Reduce LCP by 300-500ms",
      "implementation": "Use font-display: swap for web fonts, preload critical font files, and consider using system fonts as fallbacks. Implement proper font loading strategies.",
      "codeExample": "@font-face { font-family: 'CustomFont'; font-display: swap; src: url('/fonts/font.woff2') format('woff2'); }",
      "category": "fonts"
    },
    {
      "id": 4,
      "title": "Reserve Space for OneTrust Cookie Banner",
      "description": "The OneTrust cookie banner appears after page load without reserved space, causing significant layout shift. This affects user experience and CLS scores.",
      "metric": "CLS",
      "priority": "High",
      "effort": "Easy",
      "impact": "Reduce CLS by 0.08-0.12",
      "implementation": "Reserve vertical space for the cookie banner in CSS or show it immediately on page load. Consider using a placeholder element that gets replaced by the actual banner.",
      "codeExample": ".cookie-banner-placeholder { height: 60px; width: 100%; background: #f0f0f0; }",
      "category": "third-party"
    },
    {
      "id": 5,
      "title": "Set Explicit Dimensions on Image Elements",
      "description": "Several images lack explicit width and height attributes, causing layout shifts as they load. This is particularly problematic for product images and hero banners.",
      "metric": "CLS",
      "priority": "Medium",
      "effort": "Easy",
      "impact": "Reduce CLS by 0.03-0.06",
      "implementation": "Add explicit width and height attributes to all img elements. Use aspect-ratio CSS property for responsive images to maintain proper sizing.",
      "codeExample": "<img src=\"product.jpg\" width=\"300\" height=\"200\" alt=\"Product\" style=\"aspect-ratio: 3/2;\" />",
      "category": "images"
    },
    {
      "id": 6,
      "title": "Optimize Third-Party Script Loading",
      "description": "Multiple third-party scripts are blocking the main thread and causing poor INP scores. These scripts should be loaded asynchronously or deferred to improve interactivity.",
      "metric": "INP",
      "priority": "High",
      "effort": "Medium",
      "impact": "Reduce INP by 100-150ms",
      "implementation": "Add async or defer attributes to non-critical scripts. Consider using dynamic imports for scripts that aren't needed immediately. Implement script loading strategies.",
      "codeExample": "<script async src=\"/js/analytics.js\"></script>\n<script defer src=\"/js/non-critical.js\"></script>",
      "category": "javascript"
    },
    {
      "id": 7,
      "title": "Implement Code Splitting for JavaScript Bundles",
      "description": "Large JavaScript bundles are causing long tasks that block user interactions. Implement code splitting to reduce initial bundle size and improve responsiveness.",
      "metric": "INP",
      "priority": "Medium",
      "effort": "Hard",
      "impact": "Reduce INP by 80-120ms",
      "implementation": "Split JavaScript into smaller chunks based on routes or features. Use dynamic imports for non-critical functionality. Implement proper bundling strategies.",
      "codeExample": "// Dynamic import for non-critical features\nconst module = await import('./non-critical-feature.js');",
      "category": "javascript"
    }
  ]
} 